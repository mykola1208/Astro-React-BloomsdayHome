---
import { Icon } from "astro-icon/components";
import Layout from "../../../layouts/Layout.astro";
import DocumentViewer from "../../../components/documents/DocumentViewer.jsx";
import Accordion from "../../../components/documents/Accordion.astro";
import SharePackageForm from "../../../components/react/SharePackageForm.jsx";
import Dialog from "../../../components/Dialog.astro";
import SuccessConfirmation from "../../../components/react/SuccessConfirmation.jsx";
import BreadCrumbs from "../../../components/BreadCrumbs.astro";
import ShowAddress from "../../../components/ShowAddress.astro";
import { getDocumentsForCategory } from "../../api/getTasksDocuments.js";
import { getS3SignedUrlForDownload } from "../../api/getS3SignedUrlForDownload";

const { id, name } = Astro.params;

const graphqlEndpoint = import.meta.env.PUBLIC_HASURA_BASE_URL;
const token = await Astro.locals.auth().getToken({ template: "hasura" });
const user = await Astro.locals.currentUser();

const transformString = (inputString) => {
  // Split the input string into an array of words using the '-' character as the delimiter
  const words = inputString.split("-");

  // Capitalize the first character of each word and concatenate them with a space
  const transformedString = words
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(" ");

  return transformedString;
};

const breadcrumbs_title = transformString(id);

const accordionItems = await getDocumentsForCategory(
  graphqlEndpoint,
  token,
  id
);

const s3UrlForDownload =
  decodeURIComponent(name) != "new"
    ? await getS3SignedUrlForDownload(
        graphqlEndpoint,
        token,
        user.id,
        decodeURIComponent(name)
      )
    : undefined;
---

<Layout title="Bloomsday">
  <div class="relative dropdown">
    <div class="py-3 px-6 flex flex-col">
      <div class="px-6 py-6 flex justify-between items-start">
        <BreadCrumbs
          breadcrumbs={[
            { title: "Documents ", url: "#" },
            { title: breadcrumbs_title, url: "#" },
          ]}
        />
        <ShowAddress />
      </div>
      <div class="grid grid-cols-7 gap-x-12 pl-3 pr-3">
        <div class="col-span-2">
          <button
            class="flex justify-center bg-darkgreen rounded-lg gap-5 py-3 w-full"
            id="share"
          >
            <Icon name="share" width={24} height={24} class="shrink-0" />
            <span class="text-white">Share Document Package</span>
          </button>
          <div class="mt-8">
            <Accordion
              id={id}
              accordionItems={accordionItems.map((document) => ({
                title: document.title,
                items: document.items,
              }))}
            />
          </div>
        </div>
        <div class="col-span-5 border border-sage rounded-lg">
          <DocumentViewer
            id={id}
            docUrl={s3UrlForDownload}
            user={user}
            client:only="react"
          />
        </div>
        <div id="share-package">
          <Dialog
            id="share-package-dialog"
            title="Share Document Package"
            description="Select the documents you wish to share."
            width="1200px"
            height="855px"
          >
            <div class="py-4">
              <SharePackageForm client:only="react" />
            </div>
          </Dialog>
        </div>
        <div id="success-confirmation">
          <Dialog
            id="success-confirmation-dialog"
            width="1200px"
            height="855px"
          >
            <div class="flex items-center justify-center h-full">
              <SuccessConfirmation client:only="react" />
            </div>
          </Dialog>
        </div>
      </div>
    </div>
  </div>
</Layout>
<script>
  const button = document.querySelector("#share");
  const sharePackageDialog = document.querySelector("#share-package-dialog");
  button.addEventListener("click", () => {
    sharePackageDialog.setAttribute("open", "true");
    const sharePackageButton = document.querySelector("#share-package-button");
    const successConfirmationDialog = document.querySelector(
      "#success-confirmation-dialog"
    );
    sharePackageButton.addEventListener("click", () => {
      sharePackageDialog.setAttribute("open", "false");
      successConfirmationDialog.setAttribute("open", "true");
    });
  });
</script>
