---
import { Icon } from "astro-icon/components";
import Dialog from "./Dialog.astro";
import DocumentUploader from "./react/DocumentUploader";

interface Props {
  stepId: string;
  checked: boolean;
  label: string;
  taskId: string;
  header: string;
  filename: string;
}

const { stepId, checked, label, taskId, header, filename } = Astro.props;
const user = await Astro.locals.currentUser();
const randomId = Math.floor(Math.random() * 9999);
---

<div class="flex gap-2 items-center" id={`div${randomId}`}>
  <div class="relative">
    <input
      class="appearance-none w-5 h-5 cursor-pointer"
      type="checkbox"
      checked={checked}
      id={`checkbox${randomId}`}
      disabled
    />
    {
      checked ? (
        <Icon
          name="checkbox-on"
          width={20}
          height={20}
          class="absolute top-0 left-0 w-5 h-5 pointer-events-none"
        />
      ) : (
        <Icon
          name="checkbox-off"
          width={20}
          height={20}
          class="absolute top-0 left-0 w-5 h-5 pointer-events-none"
        />
      )
    }
  </div>
  {
    checked ? (
      <a
        class="text-sm font-medium text-darkgreen text-left hover:underline hover:decoration-darkgreen"
        href={`/documents/${stepId}/${encodeURIComponent(filename)}`}
        id={`link${randomId}`}
      >
        {label}
      </a>
    ) : (
      <button
        type="button"
        class="add-file-button"
        id={taskId}
        data-random-id={randomId}
      >
        <p class="text-sm font-medium text-darkgreen text-left hover:underline hover:decoration-darkgreen">
          {label}
        </p>
      </button>
    )
  }

  <div id="add-file">
    <Dialog
      id="add-document-dialog"
      title="Upload Document"
      width="449px"
      height="593px"
      titleClass="text-3xl"
    >
      <div class="py-4">
        <DocumentUploader
          client:only="react"
          currentUser={user}
          mode="upload"
          id={stepId}
        />
      </div>
    </Dialog>
  </div>
</div>
<script>
  const addFileButtons = document.querySelectorAll(
    ".add-file-button"
  ) as NodeListOf<HTMLButtonElement>;
  const addDocumentDialog = document.querySelector("#add-document-dialog");

  addFileButtons.forEach((button) => {
    button.addEventListener("click", () => {
      button.classList.add("taskID");
      addDocumentDialog.setAttribute("open", "true");
    });
  });

  // Adding event listener to <a> tags to set localStorage item
  const linkElements = document.querySelectorAll(
    'a[id^="link"]'
  ) as NodeListOf<HTMLAnchorElement>;
  linkElements.forEach((link) => {
    link.addEventListener("click", (event) => {
      event.preventDefault(); // Prevent the default link action
      localStorage.setItem("activeAccordionContent", link.textContent);
      window.location.href = link.href; // Manually navigate to the href
    });
  });
</script>
