---
import { Icon } from "astro-icon/components";

interface AccordionItem {
  id: string;
  headerPrefix: string;
  header: string;
  body: string;
  isExpanded?: boolean;
}

interface Props {
  headerClasses?: string;
  bodyClasses?: string;
  items: AccordionItem[];
}

const {
  headerClasses = "py-5 px-3 border border-0 border-t-2 border-darkgreen h-12.5",
  bodyClasses = "pb-4 pl-3 pr-10 text-darkgreen",
  items = [],
} = Astro.props;

const step = Astro.params.id;
---

<xe-accordion>
  <div class="accordion" role="presentation">
    {
      items.map(({ id, headerPrefix, header, body, isExpanded = false }) => {
        const randomId = Math.floor(Math.random() * 9999);

        return (
          <div class="accordion-item group" open={step == id ? true : false}>
            <a
              class:list={[
                "button expandable heading w-full flex items-center",
                headerClasses,
                "group-open:border-completed group-open:border-t-4",
              ]}
              aria-controls={`accordion${randomId}`}
              aria-expanded={step == id ? "true" : "false"}
              href={`/progress-tracker/${id}`}
            >
              <span class="text-darkgreen text-left leading-4 grow font-medium">
                {headerPrefix ? <span class="mr-1">{headerPrefix}</span> : null}

                <span class="group-open:font-bold">{header}</span>
              </span>
              <Icon
                name="chevron"
                width={24}
                height={24}
                class="shrink-0 group-open:rotate-180"
              />
            </a>
            <div
              class:list={["body", bodyClasses]}
              id={`accordion${randomId}`}
              hidden={step == id ? false : true}
            >
              <p class="text-base leading-6">{body}</p>
            </div>
          </div>
        );
      })
    }
  </div>
</xe-accordion>

