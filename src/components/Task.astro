---
import { Icon } from "astro-icon/components";
import Checkbox from "./Checkbox.astro";

interface CheckListItem {
  status: boolean;
  label: string;
  id: string;
}

interface CheckListGroup {
  title: string;
  id: string;
  checkList: CheckListItem[];
}

interface Props {
  stepId: string;
  headerIcon: string;
  header: string;
  checkList?: CheckListItem[];
  hasGroups?: boolean;
  checkListGroups?: CheckListGroup[];
  items: any[];
}

const {
  stepId,
  headerIcon,
  header,
  hasGroups = false,
  checkList = [],
  checkListGroups = [],
  items,
} = Astro.props;

const flag =
  (hasGroups &&
    checkListGroups.every(({ checkList }) =>
      checkList.every(({ status }) => status)
    )) ||
  (!hasGroups && checkList.every(({ status }) => status));

const handleGetFilename = (label) => {
  const document = items?.find(({ title }) => title == label)?.document;

  return document?.filename;
};

---

<div
  class="flex flex-col gap-2 h-[260px] border border-sage rounded-xl py-3 px-4"
>
  <div class="flex items-center gap-1.5">
    <Icon name={headerIcon} width={25} height={25} class="shrink-0" />
    <span class="text-darkgreen leading-4 grow font-medium text-xl">
      {header}
    </span>
  </div>

  <div class="grow">
    <div>
      {
        hasGroups ? (
          checkListGroups.map(({ id, title, checkList }) => (
            <div class="flex flex-col">
              <p class="text-darkgreen font-medium text-sm">{title}</p>
              <ul>
                {checkList.map(({ status, label }) => (
                  <li>
                    <Checkbox
                      header={header}
                      stepId={stepId}
                      checked={status}
                      label={label}
                      taskId={id}
                      filename={handleGetFilename(label)}
                    />
                  </li>
                ))}
              </ul>
            </div>
          ))
        ) : (
          <ul>
            {checkList.map(({ id, status, label }) => (
              <li>
                <Checkbox
                  header={header}
                  stepId={stepId}
                  checked={status}
                  label={label}
                  taskId={id}
                  filename={handleGetFilename(label)}
                />
              </li>
            ))}
          </ul>
        )
      }
    </div>
  </div>
</div>
